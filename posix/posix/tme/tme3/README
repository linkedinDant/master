PITTON Olivier n°2800439 - Groupe 4

1°) Conventions

Tous les fichiers représentant du code, des binaires ou des bibliothèques (*.c, *.h, *.o, ...) sont sous la forme exo[X] où X est le numéro de l'exercice.
Exemple : exo5.c

Si un exercice stipule deux manipulations de code, alors il existe deux versions sous le format exo[X]-[Y]
où X est le numéro de l'exercice et Y la partie de l'exercice. 

Pour chaque exercice nécessitant du code, un header et un fichier source sont inclus, respectant les précédentes conventions.

Seuls les exercices 3 et 4 ne la respectent pas, un fichier et un header séparés doivent être fournis.

2°) Descriptions du contenu des répertoires

include/ : Le dossier contient toutes les en-têtes de fichiers sources (*.h) pour chaque exercice.
  exo1 : Header de l'exercice 1.
  exo2 : Header de l'exercice 2.
  exo5 : Header de l'exercice 5.
  thread_stack-1 : Header des exercices 3 et 4.

src/ : Le dossier contient tous les fichiers sources (*.c) pour chaque exercice.
  exo1 : Source de l'exercice 1.
  exo2 : Source de l'exercice 2.
  exo3 : Main de l'exercice 3.
  exo4 : Main de l'exercice 4. 
  exo5 : Source de l'exercice 5.
  thread_stack : Source de l'exercice 3 et 4.
  
3°) Directives du makefile

Afin d'utiliser pleinement les possibilités vues en cours pour la réalisation d'un makefile, celui-ci a été enrichi avec des variables internes et personnalisées.

Le makefile définit quatre variables personnalisées :
  
  CC -> La commande représentant le compilateur utilisé (ici gcc).
  CFLAGS -> Les arguments à spécifier au compilateur de manière permanente
  ALL -> La liste de toutes les cibles, permettant de faire la compilation et l'édition de lien de tout le TME.
  OBJ -> Une simple variable pour factoriser les appels aux fichiers objets.  
  
Les cibles sont les suivantes :

  all -> Lance la compilation de tout le TME.
  clean -> Nettoie les fichiers exécutables et fichiers objets.
  exo1 -> Compile l'exercice dans le dossier obj/ et copie le fichier objet dans le dossier bin/
  exo2 -> Compile l'exercice dans le dossier obj/ et copie le fichier objet dans le dossier bin/
  exo3 -> Compile l'exercice dans le dossier obj/ et copie le fichier objet dans le dossier bin/. 
          Crée aussi le binaire du fichier séparé (thread_stack-1). Ainsi deux fichiers sont *.o sont générés.
  exo4 -> Compile l'exercice dans le dossier obj/ et copie le fichier objet dans le dossier bin/
          Crée aussi le binaire du fichier séparé (thread_stack-1). Ainsi deux fichiers sont *.o sont générés.
  exo5 -> Compile l'exercice dans le dossier obj/ et copie le fichier objet dans le dossier bin/
  thread_stack-1 -> Compile le fichier source thread_stack-1.c et copie le fichier dans le dossier obj/. Ce fichier est utilisé
                    par les exercices 3 et 4.
  
Toutes les directives des autres exercices sont identiques puisqu'il s'agit toujours d'un fichier source et de son en-tête.
Les exercices 3 et 4 utilisent en premier lieu la cible "thread_stack-1" afin de compiler le fichier dans lequel se trouve l'ensemble des fonctions.
Ces fonctions peuvent ainsi être appelées dans les fichiers exo3.c et exo4.c, contenant les main des exercices.
Lors de l'appel au compilateur, le fichier objet généré est copié et renommé dans le dossier bin/, puisqu'il s'agit bel et bien de l'exécutable.

Enfin, toutes les directives affichent un message au lancement et à la fin de celles-ci.

4°) Etat d'avancement des exercices

Les exercices sont terminés.
